security:
  # dodaje kod
  encoders:
    App\Entity\Admin:
      algorithm: auto
    #security dla Usera
    # App\Entity\User:
    #   algorithm: auto
  #koniec dodanego kodu
  enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    App\Entity\Admin:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        # property: email
        property: username
    #dodaje app_admin_provider wraz z App\Entity\Admin
    app_admin_provider:
      entity:
        class: App\Entity\Admin
        property: username
    #koniec add_admin_provider
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      form_login:
        # login_path: login
        # check_path: login
        # when user not authenticated -> transer to name="userlogin"
        default_target_path: userlogin
        # sprawdzam security pod katem sciezki uri "/userlogin"
        # podobnie jak w twig renedered form oraz controller "/userlogin"
        login_path: userlogin
        enable_csrf: true
        # check_path: userlogin
        check_path: userlogin
        # set entry point for ROLE_USER
      entry_point: form_login
      lazy: true
      provider: app_user_provider
      custom_authenticator: App\Security\AppAuthenticator
      logout:
        path: app_logout
        # where to redirect after logout
        # target: app_any_route

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#the-firewall

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }
